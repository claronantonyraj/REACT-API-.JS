// CurrencyConverter.js
import React, { useState, useEffect } from 'react';
import './App.css';

const CurrencyConverter = () => {
  const [currencies, setCurrencies] = useState([]);
  const [fromCurrency, setFromCurrency] = useState('USD');
  const [toCurrency, setToCurrency] = useState('EUR');
  const [amount, setAmount] = useState(1);
  const [exchangeRate, setExchangeRate] = useState();
  const [convertedAmount, setConvertedAmount] = useState();

  useEffect(() => {
    const fetchCurrencies = async () => {
      try {
        const response = await fetch('https://api.exchangerate-api.com/v4/latest/USD');
        if (!response.ok) {
          throw new Error('Failed to fetch currencies.');
        }
        const data = await response.json();
        setCurrencies(Object.keys(data.rates));
        setExchangeRate(data.rates[toCurrency]);
      } catch (error) {
        console.error(error);
      }
    };

    fetchCurrencies();
  }, [toCurrency]);

  const handleFromCurrencyChange = (e) => {
    setFromCurrency(e.target.value);
  };

  const handleToCurrencyChange = (e) => {
    setToCurrency(e.target.value);
  };

  const handleAmountChange = (e) => {
    setAmount(e.target.value);
  };

  const convertCurrency = () => {
    const result = (amount * exchangeRate).toFixed(2);
    setConvertedAmount(result);
  };

  return (
    <div className="currency-converter">
      <h1>Currency Converter</h1>
      <div className="input-container">
        <input type="number" value={amount} onChange={handleAmountChange} />
        <select value={fromCurrency} onChange={handleFromCurrencyChange}>
          {currencies.map((currency) => (
            <option key={currency} value={currency}>
              {currency}
            </option>
          ))}
        </select>
      </div>
      <div className="equals">=</div>
      <div className="input-container">
        <input type="number" value={convertedAmount} disabled />
        <select value={toCurrency} onChange={handleToCurrencyChange}>
          {currencies.map((currency) => (
            <option key={currency} value={currency}>
              {currency}
            </option>
          ))}
        </select>
      </div>
      <button onClick={convertCurrency}>Convert</button>
    </div>
  );
};

export default App;



#app.css

.currency-converter {
  max-width: 400px;
  margin: 0 auto;
  text-align: center;
}

.input-container {
  display: flex;
  margin-bottom: 10px;
}

input[type="number"], select {
  padding: 10px;
  flex: 1;
}

button {
  padding: 10px 20px;
  background-color: #007bff;
  color: #fff;
  border: none;
  cursor: pointer;
}

.equals {
  font-size: 24px;
  margin-bottom: 10px;
}
