// RecipeApp.js
import React, { useState } from 'react';
import './App.css';

const RecipeApp = () => {
  const [ingredients, setIngredients] = useState('');
  const [recipes, setRecipes] = useState([]);
  const [error, setError] = useState(null);

  const fetchRecipes = async () => {
    try {
      const response = await fetch(`https://api.edamam.com/search?q=${encodeURIComponent(ingredients)}&app_id=YOUR_APP_ID&app_key=YOUR_APP_KEY`);
      if (!response.ok) {
        throw new Error('Error fetching recipes. Please try again later.');
      }
      const data = await response.json();
      setRecipes(data.hits);
      setError(null);
    } catch (error) {
      setError(error.message);
      setRecipes([]);
    }
  };

  return (
    <div className="recipe-app">
      <h1>Recipe Search</h1>
      <input
        type="text"
        placeholder="Enter ingredients (comma separated)"
        value={ingredients}
        onChange={(e) => setIngredients(e.target.value)}
      />
      <button onClick={fetchRecipes}>Search</button>
      {error && <div className="error">{error}</div>}
      <div className="recipes">
        {recipes.map((recipe, index) => (
          <div className="recipe" key={index}>
            <img src={recipe.recipe.image} alt={recipe.recipe.label} />
            <h3>{recipe.recipe.label}</h3>
            <ul>
              {recipe.recipe.ingredientLines.map((ingredient, i) => (
                <li key={i}>{ingredient}</li>
              ))}
            </ul>
          </div>
        ))}
      </div>
    </div>
  );
};

export default RecipeApp;


#app.css

/* RecipeApp.css */
.recipe-app {
  max-width: 800px;
  margin: 0 auto;
  text-align: center;
}

input[type="text"] {
  padding: 10px;
  margin-bottom: 10px;
  width: 100%;
}

button {
  padding: 10px 20px;
  background-color: #007bff;
  color: #fff;
  border: none;
  cursor: pointer;
}

.error {
  color: red;
  margin-bottom: 10px;
}

.recipes {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.recipe {
  border: 1px solid #ccc;
  border-radius: 5px;
  padding: 20px;
  margin: 10px;
  width: 300px;
}

.recipe img {
  width: 100%;
  border-radius: 5px;
}

.recipe h3 {
  margin-top: 10px;
}

.recipe ul {
  list-style-type: none;
  padding: 0;
}

.recipe li {
  margin-bottom: 5px;
}
